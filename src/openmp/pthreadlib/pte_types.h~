/* pte_types.h  */

#ifndef PTE_TYPES_H
#define PTE_TYPES_H
#include <nautilus/semaphore.h>
#include <nautilus/thread.h>
#include <nautilus/spinlock.h>
struct pmutex{
  spinlock_t lock;
  uint8_t  flags;
};
struct _thread_with_signal{
  nk_thread_t tid;
  uint8_t signal;
};

typedef pte_osMutexHandle struct pmutex*;
typedef pte_osThreadEntryPoint  nk_thread_fun;
typedef pte_osThreadhandle  _thread_with_singal*;
typedef pte_osSemaphoreHandle nk_semaphore*;

typedef enum _pthread_signal{
  0;
  NK_THREAD_CANCEL;
}pthread_signal;

/* struct timespec */
/* { */
/*   time_t  tv_sec; */
/*   long    tv_nsec; */
/* }; */

/* struct timeb */
/* { */
/*   time_t time; */
/*   unsigned short millitm; */
/*   short timezone; */
/*   short dstflag; */
/* }; */

#endif /* PTE_TYPES_H */
